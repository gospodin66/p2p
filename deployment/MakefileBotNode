# Makefile for python code
# 
# - $ python3 app.py     # Uses the system Python
# - $ ./venv/bin/python3 # USes the virtualenv Python
#
# - writing ./venv.bin/ every time can be time consuming, 
#	especially if you have to run a lot of commands that use
#	Python or pip. To overcome this, you can “activate” the 
#	virtual environment by running: $ ./venv/bin/activate
#
.PHONY: run clean

VENV_PATH='env/bin/activate'
ENVIRONMENT_VARIABLE_FILE='.env'
DOCKER_NAME=$DOCKER_BOT_NODE_NAME
DOCKER_TAG=$DOCKER_BOT_NODE_TAG
CONTEXT_PATH=$CONTEXT_PATH
NODE_DOCKERFILE=$DOCKER_BOT_NODE_DOCKERFILE

define find.functions
	@fgrep -h "##" $(MAKEFILE_LIST) | fgrep -v fgrep | sed -e 's/\\$$//' | sed -e 's/##//'
endef

help:
	@echo 'The following commands can be used.'
	@echo ''
	$(call find.functions)


init: ## sets up environment and installs requirements
init:
	pip install -r requirements.txt

install: ## Installs development requirments
install:
	python3 -m pip install --upgrade pip
	# Used for packaging
	pip install setuptools wheel
	# Used for testing
	pip install pytest

clean: ## Remove build and cache files
clean:
	rm -rf *.egg-info
	rm -rf build
	rm -rf dist
	rm -rf .pytest_cache
	# Remove all pycache
	find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf

env: ## Source venv and environment files for testing #  create a virtual environment in the project root:
env:
	python3 -m venv env
	source $(VENV_PATH)
	source $(ENVIRONMENT_VARIABLE_FILE)

leave: ## Cleanup and deactivate venv
leave: clean
	deactivate

test: ## Run pytest
test:
	pytest . -p no:logging -p no:warnings

build: ## Build docker image
build:
	docker build -t $DOCKER_NAME:$DOCKER_TAG -f $NODE_DOCKERFILE $CONTEXT_PATH 

create: ## Create docker image
create: build
	docker create -it --name $DOCKER_NAME $DOCKER_NAME:$DOCKER_TAG

start: ## Build and start docker image
start: build
	docker start $DOCKER_NAME

run: ## build, start and run docker image
run: start
	docker run -it $DOCKER_NAME:$DOCKER_TAG

exec: ## build, start and exec into docker image
exec: start
	docker exec -it $DOCKER_NAME python

