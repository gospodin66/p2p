apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.defNodeName }}
  labels:
    app: {{ .Values.defNodeApp }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ .Values.defNodeApp }}
  template:
    metadata:
      labels:
        app: {{ .Values.defNodeApp }}
    spec:
      containers:
      - name: {{ .Values.defNodeApp }}
        image: {{ .Values.defNodeImage }}
        tty: true
        stdin: true
        ports:
        - containerPort: {{ .Values.defNodeContainerPort }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 50m
            memory: 200Mi
          requests:
            cpu: 20m
            memory: 100Mi
        volumeMounts:
        - name: p2p-data
          mountPath: /p2p-data/
      volumes:
        - name: p2p-data
          persistentVolumeClaim:
            claimName: p2pnode-pvc


---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.botNodeName }}
  labels:
    app: {{ .Values.botNodeApp }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{ .Values.botNodeApp }}
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ .Values.botNodeApp }}
    spec:
      containers:
      - name: {{ .Values.botNodeApp }}
        image: {{ .Values.botNodeImage }}
        tty: true
        ports:
        - containerPort: {{ .Values.botNodeContainerPort }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 50m
            memory: 200Mi
          requests:
            cpu: 20m
            memory: 100Mi


---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.defNodeServiceName }}
spec:
  # clusterIP: None
  type: NodePort
  selector:
    app: {{ .Values.defNodeApp }}
  ports:
    - protocol: TCP
      port: {{ .Values.defNodeContainerPort }}
      targetPort: {{ .Values.defNodeServicePort }}


---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.botNodeServiceName }}
spec:
  # clusterIP: None
  type: NodePort
  selector:
    app: {{ .Values.botNodeApp }}
  ports:
    - protocol: TCP
      port: {{ .Values.botNodeContainerPort }}
      targetPort: {{ .Values.botNodeServicePort }}


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: p2p
  name: p2pnode-pvc
  labels:
    app: p2pnode
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 1Gi