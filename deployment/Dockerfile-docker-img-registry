FROM httpd:2.4-alpine

RUN apk update && apk add --no-cache \
                      python3 \
                      strace \
                      nano \
                      net-tools \
                      curl \
                      iptables \
                      openssl \
                      openssh \
                      openrc

ARG user=registryadmin
ARG group=registryadmin
# normal case: read password from file
ARG password=registrypassword
ARG uid=1000
ARG gid=1000

RUN addgroup -g ${gid} ${group}
RUN adduser -h /home/${user} -s /bin/sh -D ${user} -u ${uid} -G ${group}
RUN echo -n "${user}:${password}" | chpasswd

RUN rc-update add sshd
RUN mkdir -p /usr/local/apache2/htdocs/docker-image-registry/

COPY ./deployment/registry-images/ \
      /usr/local/apache2/htdocs/docker-image-registry/

RUN chown -R www-data:www-data /usr/local/apache2/htdocs/docker-image-registry/ \
 && chmod -R 0754 /usr/local/apache2/htdocs/docker-image-registry/

RUN mkdir -p /usr/local/apache/passwd
RUN htpasswd -bc /usr/local/apache/passwd/passwords "${user}" "${password}"

RUN openssl \
   req \
  -x509 \
  -newkey rsa:4096 \
  -sha256 \
  -days 3650 \
  -nodes \
  -keyout /usr/local/share/ca-certificates/docker-image-registry.key.pem \
  -out /usr/local/share/ca-certificates/docker-image-registry.crt.pem \
  -subj "/CN=172.21.5.50"

RUN cp /usr/local/share/ca-certificates/docker-image-registry.crt.pem /usr/local/apache2/conf/server.crt
RUN cp /usr/local/share/ca-certificates/docker-image-registry.key.pem /usr/local/apache2/conf/server.key
RUN update-ca-certificates

COPY ./deployment/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY ./deployment/httpd-registry.conf /usr/local/apache2/conf/extra/httpd-registry.conf

COPY ./deployment/sshd_config /etc/ssh/

RUN sed -i \
		-e 's/^#\(Include .*httpd-ssl.conf\)/\1/' \
		-e 's/^#\(LoadModule .*mod_ssl.so\)/\1/' \
		-e 's/^#\(LoadModule .*mod_socache_shmcb.so\)/\1/' \
		/usr/local/apache2/conf/httpd.conf

COPY ./deployment/httpd-sshd-entrypoint.sh /usr/local/bin
COPY ./deployment/ssh_setup.sh /usr/local/bin
RUN chmod -R +x /usr/local/bin

ENV SSH_PORT 22

EXPOSE 47777 \
       47779 \
       443 \
       80 \
       22

CMD ["httpd-sshd-entrypoint.sh", "httpd-foreground"]